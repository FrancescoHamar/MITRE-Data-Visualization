MITRE DATA Viewer

Accessing Mitre Database through stix:
 - Language choice: Python, supported through stix2 library
 - Choosing how to access: Download all data vs Live access (email mentioned scraping or servers so i used live data)

Learning Stix and Taxi
 - Understanding how objects are queried
 - Understanding Filtering
 - Problem! TAXII Server Response with different amount of objects! Setting per_request=13  
	- https://github.com/OTRF/ATTACK-Python-Client/issues/43  || Seems to not be an issue as manual checks confirm the results

Understanding File format
 - Figuring out types and relationships
 - Mitigation types between files change id. For example "Data Loss Prevention" course of action, will have a different id in 
enterprise and in ics for example. This holds for both stix and att&ck Ids.
 - Figuring out relationships: no Sql like Json with objects of type relation which connect other objects

About the problem in particular:
 - After having looked through all of the above and thinking about code formatting this is conclusion:
	- Query relationships between mitigation and techniques : Hashmap from target to source and viceversa
	- Find link between datasources and attacks
 - Quite unsure whether the datasources refer to the external references, but I will assume so after not having found anything better
	- Resources appear repeated sometimes, as multiple articles are used from certain sources, this could call for multiple logging
of the resources per item, or simply count them as one
 - Quite sadly, when I got to the killchain mapping part I realized that there exists an object called x-mitre-data-component which is
a data source that detects the attack techniques. This made much more sense with the assignment so I will keep existing code for the
external resources.


Code Formatting
 - Parsing sources combined vs one by one. Duplication pushes me towards handling everything one by one
 - Abstracting finding relationships by mitigation and by attack technique
 - I believe that the above comment does not hold for the external references to attack link as it is a different relation and hierarchy
 - Should I use a class for external resources to contain both name and url, or simply count the resources per name (?)
 - Some External references do not have a url, I will have to null the url
 - I will reformat slightly the code that check the technique-mitigation relationship to fit any kind of relationship, and call functions
to assign target, source, and relation type variables to avoid runtime errors
 - Reformatting all logic to a Data Access Point class


Output
 - Starting out by visualizing data in bar plots in descending order with keys and number of associated values to answer questions 
graphically
 - Big Issues: Way too slow computations and waiting times for server, O(n^2) everywhere. Accessing data from server at multiple instances (maybe I should've just downloaded the json files and read locally :( )
 - Regardless of this I will continue with a webapp, hoping that passing graphs over will work with something like flask

Webapp
 - Using Dash for data visualization
 - It takes waaay too long to load in the data, webapp has to load for too much time. I am considering preloading the data and displaying from there on presentation

